name: Convert RSS to ActivityPub

on:
  push:
    branches:
      - main  # Trigger when changes are pushed to the main branch
  schedule:
    - cron: "0 0 * * *"  # Runs every day at midnight UTC

jobs:
  convert-rss-to-activitypub:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '14'

      - name: Install dependencies
        run: |
          npm install axios xml2js  # Install the libraries to fetch and parse the RSS feed

      - name: Create and Run conversion script
        run: |
          echo "
          const axios = require('axios');
          const fs = require('fs');
          const { parseStringPromise } = require('xml2js');

          const RSS_URL = 'https://www.finnleijen.eu/atom.xml'; 

          const actor = {
            '@context': 'https://www.w3.org/ns/activitystreams',
            'id': 'https://finnleijen.eu/activitypub/profile.json',
            'type': 'Person',
            'preferredUsername': 'rotweerxml',
            'name': 'Finn',
            'summary': 'Finns RSS/Activitypub feed',  
            'inbox': 'https://finnleijen.eu/activitypub/inbox.json',
            'outbox': 'https://finnleijen.eu/activitypub/outbox.json',
          };

          async function convertRSS() {
            try {
              console.log('Starting conversion...');
              const response = await axios.get(RSS_URL);
              const feed = await parseStringPromise(response.data);

              // Debug: Log the entire feed structure
              console.log('RSS feed structure:', JSON.stringify(feed, null, 2));

              // Extract items from the RSS feed
              const items = feed.rss.channel[0].item;

              // Debug: List the number of items in the feed
              console.log('Number of items in RSS feed:', items.length);

              // Create the activitypub directory if it doesn't exist
              fs.mkdirSync('activitypub', { recursive: true });

              // Add .gitkeep file to make sure Git tracks the directory
              fs.writeFileSync('activitypub/.gitkeep', '', 'utf8');

              // Log to check if the directory was created
              console.log('Directory activitypub created or already exists.');

              // Process each item in the RSS feed
              for (const item of items) {
                const id = item.guid[0]._;
                const activity = {
                  '@context': 'https://www.w3.org/ns/activitystreams',
                  'type': 'Create',
                  'actor': actor.id,
                  'id': 'https://finnleijen.eu/activitypub/' + id.split('/').pop() + '.json',
                  'published': new Date(item.pubDate[0]).toISOString(),
                  'object': {
                    'id': 'https://finnleijen.eu/activitypub/' + id.split('/').pop() + '.json',
                    'type': 'Article',
                    'name': item.title[0],
                    'content': item.description[0],
                    'url': item.link[0],
                  },
                };

                // Create file paths
                const activityFilePath = 'activitypub/' + id.split('/').pop() + '.json';
                fs.writeFileSync(activityFilePath, JSON.stringify(activity, null, 2));

                // Debug: Output the file creation path
                console.log('Created file at path:', activityFilePath);
              }

              // Save the profile JSON
              fs.writeFileSync('activitypub/profile.json', JSON.stringify(actor, null, 2));

              // Debug: Output profile file creation
              console.log('Created profile file at path: activitypub/profile.json');

              console.log('RSS to ActivityPub conversion completed!');
            } catch (error) {
              console.error('Error fetching or parsing RSS:', error);
              process.exit(1);  // Exit with error code to fail the workflow
            }
          }

          convertRSS();
          " > convert_rss_to_activitypub.js

          # Run the conversion script
          node convert_rss_to_activitypub.js
        shell: bash

      - name: Commit and push converted files
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          
          # Pull latest changes from the remote to avoid conflicts
          git pull origin main

          # Check if activitypub directory exists and has files
          if [ -d "activitypub" ] && [ "$(ls -A activitypub)" ]; then
            echo "Found files in activitypub directory. Adding to Git..."
            git add activitypub/
          else
            echo "No files to commit in activitypub directory."
            exit 0
          fi

          # Check for changes before committing
          if git diff --cached --quiet; then
            echo "No changes to commit."
            exit 0
          else
            echo "Committing changes..."
            git commit -m "Update ActivityPub feed"
          fi

          # Push the changes
          echo "Pushing changes to remote..."
          git push --verbose
        shell: bash
